[["working-with-a-single-variable.html", "Chapter 4 Working with a single variable 4.1 Possible features of continuous variables 4.2 Numerical features of a single continuous variables 4.3 Outliers 4.4 Closer look at the boxplot 4.5 Robust statistics: measure of central tendency 4.6 Robust statistics: measure of dispersion 4.7 Transformations 4.8 Categorical variables 4.9 Order nominal variables meaningfully 4.10 Example: Aspirin use after heart attack 4.11 Consider combining factor levels with low frequencies 4.12 Anorexia 4.13 Titanic 4.14 Coloring bars 4.15 Opinion poll in Ireland Aug 2013", " Chapter 4 Working with a single variable making transformations, detecting outliers, using robust statistics library(tidyverse) ## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── ## ✔ dplyr 1.1.2 ✔ readr 2.1.4 ## ✔ forcats 1.0.0 ✔ stringr 1.5.0 ## ✔ ggplot2 3.4.2 ✔ tibble 3.2.1 ## ✔ lubridate 1.9.2 ✔ tidyr 1.3.0 ## ✔ purrr 1.0.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors library(colorspace) library(readr) 4.1 Possible features of continuous variables ## Warning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0. ## ℹ Please use the `linewidth` argument instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. ## Warning in geom_boxplot(binwidth = 0.3): Ignoring unknown parameters: ## `binwidth` ## Bin width defaults to 1/30 of the range of the data. Pick better value with ## `binwidth`. Feature Example Description Asymmetry The distribution is not symmetrical. Outliers Some observations are that are far from the rest. Multimodality There are more than one “peak” in the observations. Gaps Some continuous interval that are contained within the range but no observations exists. Heaping Some values occur unexpectedly often. Discretized Only certain values are found, e.g. due to rounding. Implausible Values outside of plausible or likely range. 4.2 Numerical features of a single continuous variables ggplot(some_df, aes(x1)) + geom_histogram(binwidth = 0.2, fill = &quot;pink&quot;, color = &quot;black&quot;) + theme_void() + theme(axis.line.x = element_line(color = &quot;black&quot;, size = 2)) A measure of central tendency, e.g. mean, median and mode. A measure of dispersion (also called variability or spread), e.g. variance, standard deviation and interquartile range. There are other measures, e.g. skewness and kurtosis that measures “tailedness”, but these are not as common as the measures of first two. The mean is also the first moment and variance, skewness and kurtosis are second, third, and fourth central moments. Significance tests or hypothesis tests: When testing for \\(H_0: \\mu = \\mu_0\\) vs. \\(H_1: \\mu \\neq \\mu_0\\) (often \\(\\mu_0 = 0\\)), the \\(t\\)-test is commonly used if the underlying data are believed to be normally distributed. 4.3 Outliers Outliers are observations that are significantly different from the majority. ] Outliers can occur by chance in almost all distributions, but could be indicative of a measurement error, a different population, or an issue with the sampling process. Outlying values of independent variables are referred to as high-leverage points, although this distinction is not particularly important when analysing a single continuous variable. 4.4 Closer look at the boxplot fn &lt;- quantile(mtcars$wt, c(0, 0.25, 0.5, 0.75, 1), type = 7) iqr &lt;- fn[4] - fn[2] ggplot(mtcars, aes(wt, &quot;&quot;)) + geom_boxplot(size = 1.4, width = 0.2, outlier.color = &quot;#006DAE&quot;, outlier.size = 3, outlier.fill = &quot;#006DAE&quot;) + geom_dotplot(binwidth = 0.1, fill = &quot;gray&quot;) + annotate(&quot;line&quot;, x = fn[c(2,4)], y = 1.3, size = 1.3, color = &quot;#C8008F&quot;) + annotate(&quot;segment&quot;, x = fn[c(2, 4, 3)], xend = fn[c(2,4, 3)], y = c(1.25, 1.25, 0.75), yend = c(1.35, 1.35, 0.9), size = 1.3, color = &quot;#C8008F&quot;) + annotate(&quot;text&quot;, x = c(mean(fn[c(2, 4)]), fn[3]), y = c(1.4, 0.7), label = c(&quot;IQR&quot;, &quot;median&quot;), size = 10, color = &quot;#C8008F&quot;) + # some reason vline didn&#39;t work annotate(&quot;segment&quot;, x = c(fn[4] + 1.5 * iqr, fn[2] - 1.5 * iqr), xend = c(fn[4] + 1.5 * iqr, fn[2] - 1.5 * iqr), y = -Inf, yend = Inf, linetype = &quot;dashed&quot;) + theme_void() ## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. ## ℹ Please use `linewidth` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. Observations that are outside the range of lower to upper thresholds are referred at times as .monash-blueoutliers. Plotting boxplots for data from a skewed distribution will almost always show these “outliers” but these are not necessary outliers. Some definitions of outliers assume a symmetrical population distribution (e.g. in boxplots or observations a certain standard deviations away from the mean) and these definitions are ill-suited for asymmetrical distributions. 4.5 Robust statistics: measure of central tendency df &lt;- tibble(x = rnorm(200) + c(rep(0, each = 195), rep(10, 5))) ggplot(df, aes(x)) + geom_histogram() + geom_vline(xintercept = mean(df$x), color = &quot;#EE0220&quot;, size = 1.3) + geom_vline(xintercept = median(df$x), color = &quot;#746FB2&quot;, size = 1.3) + theme_void() ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Mean is a non-robust measure of location. Some robust measures of locations are: Median is the 50% quantile of the observations Trimmed mean is the sample mean after discarding observations at the tails. Winsorized mean is the sample mean after replacing observations at the tails with the minimum or maximum of the observations that remain. 4.6 Robust statistics: measure of dispersion Standard deviation or its square, **variance*, is a popular choice of measure of dispersion but is not robust to outliers. Standard deviation for sample \\(x_1, ..., x_n\\) is calculated as \\[\\sqrt{\\sum_{i=1}^n \\frac{(x_i - \\bar{x})^2}{n - 1}}\\] Interquartile range is the difference between 1st and 3rd quartile and is more robust measure of spread than above. Median absolute deviance (MAD) is also more robust and defined as \\[\\text{median}(|x_i - \\bar{x}|).\\] 4.7 Transformations Transformations to data are used as an attempt to stabilize the variance or make the data symmetrical. Log and square root transformations are popular. A range of \\(\\lambda\\) values for (one-parameter) Box-Cox transformation is sometimes used to test for optimal transformation: \\[y(\\lambda) = \\begin{cases}\\dfrac{(y^\\lambda - 1)}{\\lambda}\\\\ \\log(y)\\end{cases}\\] Children and midparents heights ggplot(df2, aes(height)) + geom_histogram(binwidth = 1) + facet_wrap(~ person, scale = &quot;free&quot;) + labs(x = &quot;Height (inches)&quot;, y = &quot;Frequency&quot;) ggplot(df2, aes(height)) + geom_histogram(binwidth = 1) + facet_grid(. ~ person) + labs(x = &quot;Height (inches)&quot;, y = &quot;Frequency&quot;) Midparent’s height is an average of the father’s height and 1.08 times the mother’s height. The data contains 205 parents and 928 children. galton %&gt;% arrange(parent, child) %&gt;% as_tibble() %&gt;% print(n = 3) ## # A tibble: 928 × 2 ## child parent ## &lt;dbl&gt; &lt;dbl&gt; ## 1 61.7 64 ## 2 63.2 64 ## 3 63.2 64 ## # ℹ 925 more rows The data included families of 1 to 15 children, so in the extreme case, one midparent data point is repeated 15 times in the data. The frequency of midparents heights therefore are over-represented with parents with large family size. ggplot(df2, aes(height)) + geom_histogram(binwidth = 1, aes(y = stat(density))) + facet_wrap(~ person) + labs(x = &quot;Height (inches)&quot;, y = &quot;Density&quot;) ## Warning: `stat(density)` was deprecated in ggplot2 3.4.0. ## ℹ Please use `after_stat(density)` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. ggplot(df2, aes(height)) + geom_histogram(binwidth = 0.1, aes(y = stat(density))) + facet_wrap(~ person) + labs(x = &quot;Height (inches)&quot;, y = &quot;Density&quot;) Changing the bin width of histogram from 1 to 0.1, we can see the data have been rounded and hence some precision is lost in the data. The data confirms this with most children’s height recorded with “.2” at the end and most midparents heights recorded with “.5” at the end. df2sum &lt;- df2 %&gt;% group_by(person) %&gt;% summarise(med = median(height)) ggplot(df2, aes(height)) + geom_histogram(binwidth = 1) + facet_grid(person ~ ., as.table = FALSE) + geom_vline(data = df2sum, aes(xintercept = med), color = &quot;red&quot;, size = 2) + labs(x = &quot;Height (inches)&quot;, y = &quot;Frequency&quot;) ggplot(df2, aes(height, person)) + geom_boxplot() + labs(x = &quot;Height (inches)&quot;, y = &quot;&quot;) Aligning the histogram vertically makes it easier to compare the heights of children and midparents. The side-by-side boxplots makes it easy to see the variability of the heights of the midparents are smaller than the children. The smaller variability is expected because the midparents heights are average of two values. We can also see that the median height is larger for the midparents than children. You may think that the heights of children should be bimodal, one peak for male and the other peak for female. But that is not necessary the case as we’ll see next. Self-reported heights data(&quot;heights&quot;, package = &quot;dslabs&quot;) ggplot(heights, aes(height)) + geom_density(aes(fill = sex), size = 2) + scale_fill_discrete_qualitative() + labs(x = &quot;Height (inches)&quot;, y = &quot;Density&quot;) + theme(legend.position = c(0.2, 0.8)) ggplot(heights, aes(height)) + geom_density(fill = &quot;#027EB6&quot;, size = 2) + labs(x = &quot;Height (inches)&quot;, y = &quot;Density&quot;) You can see that drawing separate density plots for each sexes shows that the women are on average shorter than men. The bimodality is however not visible when the data are combined. Men’s heights ggplot(df4, aes(height)) + geom_histogram(binwidth = 1, aes(y = stat(density))) + facet_grid(status ~ .) + geom_density(color = &quot;red&quot;, size = 2) + labs(x = &quot;Height (inches)&quot;, y = &quot;Density&quot;) ggplot(df4, aes(sample = height)) + geom_qq_line(color = &quot;red&quot;, size = 2) + geom_qq() + facet_grid(. ~ status) + labs(x = &quot;Theoretical quantiles&quot;, y = &quot;Sample quantiles&quot;) ggplot(df4, aes(height, status)) + geom_boxplot() + labs(x = &quot;Height (inches)&quot;, y = &quot;&quot;) The height distribution of the son appears more normal than of the father looking at the density plot. Looking at the Q-Q plots, this however looks the other way around. The heights are recorded to five decimal places (e.g. 65.04851). It’s unlikely that the heights were measured to such high precision and rather that someone must have “jittered” the data (i.e. added some small random perturbation to the observation). Boston housing data ggplot(df5, aes(MEDV)) + geom_histogram(binwidth = 1, color = &quot;black&quot;, fill = &quot;#008A25&quot;) + labs(x = &quot;Median housing value (US$1000)&quot;, y = &quot;Frequency&quot;) Thre is a large frequency in the final bin. There is a decline in observations in the $40-49K range as well as dip in observations around $26K and $34K. The histogram is using a bin width of 1 unit and is left-open (or right-closed): (4.5, 5.5], (5.5, 6.5] … (49.5, 50.5]. Occasionally, whether it is left- or right-open can make a difference. ggplot(df5, aes(MEDV, y = &quot;&quot;)) + geom_boxplot(fill = &quot;#008A25&quot;) + labs(x = &quot;Median housing value (US$1000)&quot;, y = &quot;&quot;) + theme(axis.line.y = element_blank()) ggplot(df5, aes(MEDV, y = &quot;&quot;)) + geom_jitter() + labs(x = &quot;Median housing value (US$1000)&quot;, y = &quot;&quot;) + theme(axis.line.y = element_blank()) ggplot(df5, aes(MEDV)) + geom_density() + geom_rug() + labs(x = &quot;Median housing value (US$1000)&quot;, y = &quot;&quot;) + theme(axis.line.y = element_blank()) Density plots depend on the bandwidth chosen and more than often do not estimate well at boundary cases. There are various way to present features of the data using a plot and what works for one person, may not be as straightforward for another. Be prepared to do multiple plots. ggplot(df5, aes(PTRATIO)) + geom_histogram(fill = &quot;#9651A0&quot;, color = &quot;black&quot;, binwidth = 0.2) + labs(x = &quot;Pupil-teacher ratio by town&quot;, y = &quot;&quot;, title = &quot;Bin width = 0.2, Left-open&quot;) ggplot(df5, aes(PTRATIO)) + geom_histogram(fill = &quot;#9651A0&quot;, color = &quot;black&quot;, binwidth = 0.5) + labs(x = &quot;Pupil-teacher ratio by town&quot;, y = &quot;&quot;, title = &quot;Bin width = 0.5, Left-open&quot;) ggplot(df5, aes(PTRATIO)) + geom_histogram(fill = &quot;#9651A0&quot;, color = &quot;black&quot;, bin = 30) + labs(x = &quot;Pupil-teacher ratio by town&quot;, y = &quot;&quot;, title = &quot;Bin number = 30, Left-open&quot;) ## Warning in geom_histogram(fill = &quot;#9651A0&quot;, color = &quot;black&quot;, bin = 30): ## Ignoring unknown parameters: `bin` ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ggplot(df5, aes(PTRATIO)) + geom_histogram(fill = &quot;#9651A0&quot;, color = &quot;black&quot;, binwidth = 0.2, closed = &quot;left&quot;) + labs(x = &quot;Pupil-teacher ratio by town&quot;, y = &quot;&quot;, title = &quot;Bin width = 0.2, Right-open&quot;) ggplot(df5, aes(PTRATIO)) + geom_histogram(fill = &quot;#9651A0&quot;, color = &quot;black&quot;, binwidth = 0.5, closed = &quot;left&quot;) + labs(x = &quot;Pupil-teacher ratio by town&quot;, y = &quot;&quot;, title = &quot;Bin width = 0.5, Right-open&quot;) ggplot(df5, aes(PTRATIO)) + geom_histogram(fill = &quot;#9651A0&quot;, color = &quot;black&quot;, bin = 30, closed = &quot;left&quot;) + labs(x = &quot;Pupil-teacher ratio by town&quot;, y = &quot;&quot;, title = &quot;Bin number = 30, Right-open&quot;) ## Warning in geom_histogram(fill = &quot;#9651A0&quot;, color = &quot;black&quot;, bin = 30, closed = ## &quot;left&quot;): Ignoring unknown parameters: `bin` ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ggplot(df5long, aes(value)) + geom_histogram() + facet_wrap( ~var, scale = &quot;free&quot;) + labs(x = &quot;&quot;, y = &quot;&quot;) + theme(axis.text = element_text(size = 12)) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. CRIM: per capita crime rate by town INDUS: proportion of non-retail business acres per town NOX: nitrogen oxides concentration (parts per 10 million) RM: average number of room per dwelling AGE: proportion of owner-occupied units built prior to 1940 DIS: weighted mean of distances to 5 Boston employment centres RAD: index of accessibility to radial highways TAX: full-value property tax rate per $10K PTRATIO: pupil-teacher ratio by town LSTAT: lower status of the population (%) MEDV: median value of owner-occupied homes in $1000s Movie length ggplot(movies, aes(length)) + geom_histogram() + labs(x = &quot;Length of movie (minutes)&quot;, y = &quot;Frequency&quot;) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ggplot(movies, aes(length, y = &quot;&quot;)) + geom_boxplot() + labs(x = &quot;Length of movie (minutes)&quot;, y = &quot;&quot;) + theme(axis.line.y = element_blank()) Upon further exploration, you can find the two movies that are well over 16 hours long are: movies %&gt;% filter(length &gt; 1000) %&gt;% pull(title) %&gt;% cat(sep = &quot;\\n&quot;) ## Cure for Insomnia, The ## Four Stars ## Longest Most Meaningless Movie in the World, The We can restrict our attention to films under 3 hours: movies %&gt;% filter(length &lt; 180) %&gt;% ggplot(aes(length)) + geom_histogram(binwidth = 1, fill = &quot;#795549&quot;, color = &quot;black&quot;) + labs(x = &quot;Length of movie (minutes)&quot;, y = &quot;Frequency&quot;) 4.8 Categorical variables There are two types of categorical variables: Nominal where there is no intrinsic ordering to the categories. E.g. blue, grey, black, white. Ordinal where there is a clear order to the categories. E.g. Strongly disagree, disagree, neutral, agree, strongly agree. 4.8.1 Categorical factors un R In R, categorical variables may be encoded as factors. data &lt;- c(2, 2, 1, 1, 3, 3, 3, 1) factor(data) ## [1] 2 2 1 1 3 3 3 1 ## Levels: 1 2 3 You can easily change the labels of the variables: factor(data, labels = c(&quot;I&quot;, &quot;II&quot;, &quot;III&quot;)) ## [1] II II I I III III III I ## Levels: I II III Order of the factors are determined by the input: # numerical input are ordered in increasing order #&lt;&lt; factor(c(1, 3, 10)) ## [1] 1 3 10 ## Levels: 1 3 10 # character input are ordered alphabetically #&lt;&lt; factor(c(&quot;1&quot;, &quot;3&quot;, &quot;10&quot;)) ## [1] 1 3 10 ## Levels: 1 10 3 # you can specify order of levels explicitly #&lt;&lt; factor(c(&quot;1&quot;, &quot;3&quot;, &quot;10&quot;), levels = c(&quot;1&quot;, &quot;3&quot;, &quot;10&quot;)) ## [1] 1 3 10 ## Levels: 1 3 10 4.8.2 Numerical factors in R x &lt;- factor(c(10, 20, 30, 10, 20)) mean(x) ## Warning in mean.default(x): argument is not numeric or logical: returning NA ## [1] NA as.numeric function returns the internal integer values of the factor mean(as.numeric(x)) ## [1] 1.8 You probably want to use: mean(as.numeric(levels(x)[x])) ## [1] 18 mean(as.numeric(as.character(x))) ## [1] 18 4.8.3 Example: German Bundestag Election 2009 df1 %&gt;% ggplot(aes(voters, state)) + geom_col() + labs(x = &quot;Voters (millions)&quot;, y = &quot;&quot;) df1 %&gt;% mutate(state = fct_reorder(state, voters)) %&gt;% ggplot(aes(voters, state)) + geom_col() + labs(x = &quot;Voters (millions)&quot;, y = &quot;&quot;) df1 %&gt;% mutate(state = fct_reorder(state, voters)) %&gt;% ggplot(aes(voters, state)) + geom_col() + labs(x = &quot;Voters (millions)&quot;, y = &quot;&quot;) + facet_grid(loc ~ ., scale = &quot;free_y&quot;) 4.9 Order nominal variables meaningfully Coding tip: use below functions to easily change the order of factor levels stats::reorder(factor, value, mean) forcats::fct_reorder(factor, value, median) forcats::fct_reorder2(factor, value1, value2, func) 4.10 Example: Aspirin use after heart attack df8 %&gt;% mutate(study = fct_reorder(study, desc(total))) %&gt;% ggplot(aes(study, total)) + geom_col() + labs(x = &quot;&quot;, y = &quot;Frequency&quot;) + guides(x = guide_axis(n.dodge = 2)) df8 %&gt;% mutate(study = ifelse(total &lt; 2000, &quot;Other&quot;, study), study = fct_reorder(study, desc(total))) %&gt;% ggplot(aes(study, total)) + geom_col() + labs(x = &quot;&quot;, y = &quot;Frequency&quot;) Meta-analysis is a statistical analysis that combines the results of multiple scientific studies. This data studies the use of aspirin for death prevention after myocardial infarction, or in plain terms, a heart attack. The ISIS-2 study has more patients than all other studies combined. You could consider lumping the categories with low frequencies together. 4.11 Consider combining factor levels with low frequencies Coding tip: the following family of functions help to easily lump factor levels together: forcats::fct_lump() forcats::fct_lump_lowfreq() forcats::fct_lump_min() forcats::fct_lump_n() forcats::fct_lump_prop() # if conditioned on another variable ifelse(cond, &quot;Other&quot;, factor) dplyr::case_when(cond1 ~ &quot;level1&quot;, cond2 ~ &quot;level2&quot;, TRUE ~ &quot;Other&quot;) 4.12 Anorexia ggplot(anorexia, aes(Treat)) + geom_bar() + labs(x = &quot;&quot;, y = &quot;Frequency&quot;) ggplot(anorexia, aes(Treat)) + stat_count(geom = &quot;point&quot;, size = 4) + stat_count(geom = &quot;line&quot;, group = 1) + labs(y = &quot;Frequency&quot;, x = &quot;&quot;) This can be appropriate depending on what you want to communicate. A barplot occupies more area compared to a point and the area does a better job of communicating size. A line is suggestive of a trend. geom_bar or geom_col? df &lt;- data.frame(var = c(&quot;F&quot;, &quot;F&quot;, &quot;M&quot;, &quot;M&quot;, &quot;F&quot;)) dftab &lt;- as.data.frame(table(df$var)) df ## var ## 1 F ## 2 F ## 3 M ## 4 M ## 5 F dftab ## Var1 Freq ## 1 F 3 ## 2 M 2 4.13 Titanic df9 %&gt;% group_by(Class) %&gt;% summarise(total = sum(n)) %&gt;% ggplot(aes(Class, total)) + geom_col(fill = &quot;#ee64a4&quot;) + labs(x = &quot;&quot;, y = &quot;Frequency&quot;) df9 %&gt;% group_by(Sex) %&gt;% summarise(total = sum(n)) %&gt;% ggplot(aes(Sex, total)) + geom_col(fill = &quot;#746FB2&quot;) + labs(x = &quot;&quot;, y = &quot;Frequency&quot;) df9 %&gt;% group_by(Age) %&gt;% summarise(total = sum(n)) %&gt;% ggplot(aes(Age, total)) + geom_col(fill = &quot;#C8008F&quot;) + labs(x = &quot;&quot;, y = &quot;Frequency&quot;) df9 %&gt;% group_by(Survived) %&gt;% summarise(total = sum(n)) %&gt;% ggplot(aes(Survived, total)) + geom_col(fill = &quot;#795549&quot;) + labs(x = &quot;Survived&quot;, y = &quot;Frequency&quot;) What does the graphs for each categorical variable tell us? There were more crews than 1st to 3rd class passengers There were far more males on ship; possibly because majority of crew members were male. You can further explore this by constructing two-way tables or graphs that consider both variables. Most passengers were adults. More than two-thirds of passengers died. 4.14 Coloring bars library(patchwork) g1 &lt;- df9 %&gt;% group_by(Class) %&gt;% summarise(total = sum(n)) %&gt;% ggplot(aes(Class, total)) + geom_col() + labs(x = &quot;&quot;, y = &quot;Frequency&quot;) g2 &lt;- df9 %&gt;% group_by(Class) %&gt;% summarise(total = sum(n)) %&gt;% ggplot(aes(Class, total)) + geom_col(fill = &quot;#006DAE&quot;) + guides(fill = FALSE) + labs(x = &quot;&quot;, y = &quot;Frequency&quot;) + scale_fill_discrete_qualitative() ## Warning: The `&lt;scale&gt;` argument of `guides()` cannot be `FALSE`. Use &quot;none&quot; instead as ## of ggplot2 3.3.4. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. g3 &lt;- df9 %&gt;% group_by(Class) %&gt;% summarise(total = sum(n)) %&gt;% ggplot(aes(Class, total)) + geom_col(aes(fill = Class)) + guides(fill = FALSE) + labs(x = &quot;&quot;, y = &quot;Frequency&quot;) + scale_fill_discrete_qualitative() g1 + g2 + g3 Colour here doesn’t add information as the x-axis already tells us about the categories, but colouring bars can make it more visually appealing. If you have too many categories colour won’t work well to differentiate the categories. 4.15 Opinion poll in Ireland Aug 2013 g11 &lt;- df11 %&gt;% ggplot(aes(&quot;&quot;, nos, fill = party)) + geom_col(color = &quot;black&quot;) + labs(y = &quot;&quot;, x = &quot;&quot;) + coord_polar(&quot;y&quot;) + theme(axis.line = element_blank(), axis.line.y = element_blank(), axis.text = element_blank(), panel.grid.major = element_blank()) + scale_fill_discrete_qualitative(name = &quot;Party&quot;) g11 g11 %+% df11v2 + # below is needed to keep the same color scheme as before scale_fill_manual(values = qualitative_hcl(7)[1:6]) ## Scale for fill is already present. ## Adding another scale for fill, which will replace the existing scale. Pie chart is popular in mainstream media but are not generally recommended as people are generally poor at comparing angles. 3D pie charts should definitely be avoided! Here you can see that there are many people that are “Undecided” for which political party to support and failing to account for this paints a different picture. Piechart is a stacked barplot just with a transformed coordinate system df &lt;- data.frame(var = c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;), perc = c(40, 40, 20)) g &lt;- ggplot(df, aes(&quot;&quot;, perc, fill = var)) + geom_col() g g + coord_polar(&quot;y&quot;) Roseplot is a barplot just with a transformed coordinate system dummy &lt;- data.frame(var = LETTERS[1:20], n = round(rexp(20, 1/100))) g &lt;- ggplot(dummy, aes(var, n)) + geom_col(fill = &quot;pink&quot;, color = &quot;black&quot;) g g + coord_polar(&quot;x&quot;) + theme_void() "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
